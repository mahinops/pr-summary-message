name: PR Failure Summary

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

# Add permissions to the job
permissions:
  pull-requests: write

jobs:
  summary:
    runs-on: ubuntu-latest
    steps:
      - name: Summary
        run: echo "Summary"

      - name: Test1
        id: test1
        run: echo "Test1"

      - name: Test2
        id: test2
        continue-on-error: true
        run: false  # This will fail

      - name: Test3
        id: test3
        if: always()
        run: echo "Test3"

      - name: Test4
        id: test4
        if: always()
        run: echo "Test4"

      - name: Test5
        run: echo "Test5"

      - name: PR Summary Comment
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const stepsContext = JSON.parse(process.env.STEPS_CONTEXT);
            
            // Function to get step result
            const getStepResult = (stepId) => {
              const step = stepsContext[stepId];
              return step.outcome === 'success' ? 'passed' : 'failed';
            };
            
            // Create a comment summarizing the results
            const comment = `### Workflow Summary\n
            - **Test1**: ${getStepResult('test1')}\n
            - **Test2**: ${getStepResult('test2')}\n
            - **Test3**: ${getStepResult('test3')}\n
            - **Test4**: ${getStepResult('test4')}\n`;
            
            // Create the comment on the PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment,
            });