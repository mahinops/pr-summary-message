name: Multi-Job PR Failure Summary

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  actions: read

jobs:
  job1:
    name: Job 1
    runs-on: ubuntu-latest
    steps:
      - name: Test1
        id: test1
        run: echo "Test1"
      - name: Test2
        id: test2
        run: false  # This will fail
      - name: Test3
        id: test3
        if: always()
        run: echo "Test3"

  job2:
    name: Job 2
    runs-on: ubuntu-latest
    steps:
      - name: Test4
        id: test4
        run: echo "Test4"
      - name: Test5
        id: test5
        run: echo "Test5"

  job3:
    name: Job 3
    runs-on: ubuntu-latest
    steps:
      - name: Test6
        id: test6
        run: false
      - name: Test7
        id: test7
        run: echo "Test7"

  summary:
    name: Summary
    needs: [job1, job2, job3]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Collect Job Results
        id: collect-results
        run: |
          echo "### Workflow Summary" > summary.txt
          echo "" >> summary.txt
          
          # Capture results from Job 1
          echo "## Job 1" >> summary.txt
          echo "- Test1: ${{ needs.job1.outputs.test1.outcome }}" >> summary.txt
          echo "- Test2: ${{ needs.job1.outputs.test2.outcome }}" >> summary.txt
          echo "- Test3: ${{ needs.job1.outputs.test3.outcome }}" >> summary.txt
          echo "" >> summary.txt

          # Capture results from Job 2
          echo "## Job 2" >> summary.txt
          echo "- Test4: ${{ needs.job2.outputs.test4.outcome }}" >> summary.txt
          echo "- Test5: ${{ needs.job2.outputs.test5.outcome }}" >> summary.txt
          echo "" >> summary.txt

          # Capture results from Job 3
          echo "## Job 3" >> summary.txt
          echo "- Test6: ${{ needs.job3.outputs.test6.outcome }}" >> summary.txt
          echo "- Test7: ${{ needs.job3.outputs.test7.outcome }}" >> summary.txt
          echo "" >> summary.txt

          cat summary.txt
          echo "::set-output name=result::$(cat summary.txt)"

      - name: Create PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.pull_request.number;
            const summary = `### Workflow Summary\n\n${{ steps.collect-results.outputs.result }}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: summary
            });

      - name: Print Summary
        run: echo "${{ steps.collect-results.outputs.result }}"
